@page "/editarproducto"
@using WebNegocio.Enums


@inject GenericService<Producto> productoService
@inject NavigationManager NavigationManager
@inject ILogger<EditarProducto> Logger;




<h1> Editar Producto</h1>



@if (producto == null)
{
    //@attribute [StreamRendering]
    <p><em>Cargando...</em></p>
}
else
{
    <h3>Editando Producto @producto.nombre</h3>

    <div class="contenedor-form" >
    <EditForm Model="producto" OnValidSubmit="GuardarProducto">
        <DataAnnotationsValidator />
        <label class="form-control mb-3" for="txtProducto">Producto:</label>
        <input class="form-control mb-3" type="text" @bind="producto.nombre" />
        <label class="form-control mb-3" for="rubroSelect">Rubro:</label>
        <select class="form-control mb-3" @bind="producto.Rubro">
            @foreach (var rubro in Enum.GetValues(typeof(RubroEnum)))
            {
                <option value="@rubro">@rubro.ToString()</option>
            }
        </select>
        <input class="form-control mb-3" type="text" @bind="producto.precioF" />
        <input class="form-control mb-3" type="text" @bind="producto.stock" />
        <ValidationSummary />
        <button class="btn btn-primary" type="submit">Guardar</button>
        <button class="btn btn-secondary m-3" type="button" @onclick="Volver">Cancelar</button>
    </EditForm>
    </div>

}



@code {
    [SupplyParameterFromQuery]
    [Parameter]
    public string? idProducto { get; set; }

    public Producto? producto { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            producto = await productoService.GetByIdAsync(int.Parse(idProducto));
        }
        catch (Exception ex)
        {
            Logger.LogError($"Error loading product with ID {idProducto}: {ex.Message}");
            
        }
    }



    // guarda información del formulario editar
    private async Task GuardarProducto()
    {
        Logger.LogInformation(producto.ToString());
        await productoService.UpdateAsync(producto);
        NavigationManager.NavigateTo("/productos");


    }

    private void Volver()
    {
        NavigationManager.NavigateTo("/productos"); // Reemplaza "/pagina-anterior" con la ruta de la página anterior
    }
}
